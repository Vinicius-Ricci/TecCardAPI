// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TecCardAPI.InfraEstrutura.BancoDados;

namespace TecCardAPI.Migrations
{
    [DbContext(typeof(BancoContexto))]
    partial class BancoContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TecCardAPI.Aplicacao.Entidades.Acesso", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoRM")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2020, 8, 24, 11, 41, 11, 110, DateTimeKind.Local).AddTicks(7588));

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("Codigo");

                    b.HasIndex("AlunoRM");

                    b.ToTable("Acesso");
                });

            modelBuilder.Entity("TecCardAPI.Aplicacao.Entidades.Aluno", b =>
                {
                    b.Property<int>("RM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CursoCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("QrCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(18)")
                        .HasMaxLength(18);

                    b.HasKey("RM");

                    b.HasIndex("CursoCodigo");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("TecCardAPI.Aplicacao.Entidades.Curso", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Codigo");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("TecCardAPI.Aplicacao.Entidades.Status", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoRM")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2020, 8, 24, 11, 41, 11, 116, DateTimeKind.Local).AddTicks(5782));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("Codigo");

                    b.HasIndex("AlunoRM");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("TecCardAPI.Aplicacao.Entidades.Acesso", b =>
                {
                    b.HasOne("TecCardAPI.Aplicacao.Entidades.Aluno", "Aluno")
                        .WithMany("Acessos")
                        .HasForeignKey("AlunoRM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TecCardAPI.Aplicacao.Entidades.Aluno", b =>
                {
                    b.HasOne("TecCardAPI.Aplicacao.Entidades.Curso", "Curso")
                        .WithMany("Alunos")
                        .HasForeignKey("CursoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TecCardAPI.Aplicacao.Entidades.Status", b =>
                {
                    b.HasOne("TecCardAPI.Aplicacao.Entidades.Aluno", "Aluno")
                        .WithMany("Situacoes")
                        .HasForeignKey("AlunoRM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
